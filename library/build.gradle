import org.ajoberstar.grgit.Grgit
import java.text.SimpleDateFormat

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.gitlab.arturbosch.detekt'

ext {
    def repo = Grgit.open()
    def head = repo.head()
    def tags = repo.tag.list().findAll { it.commit == head }
    if (tags.size() > 1) {
        def errorStr = "More than one tag: "
        tags.each { item ->
            errorStr += item.name + ", "
        }
        errorStr = errorStr.substring(0, errorStr.length() - 2)
        throw new IllegalArgumentException(errorStr)
    } else if (tags.size() == 1) {
        def currentTag = tags[0].name
        assert currentTag ==~ '^v[0-9]+[.][0-9]+.[0-9]+$'

        calculatedVersion = currentTag.substring(1) // remove leading "v"
    } else {
        SimpleDateFormat formatter = new SimpleDateFormat("yyyyMMddHHmm")
        calculatedVersion = formatter.format(new Date())
    }

    println("version: " + calculatedVersion)
}

version calculatedVersion
apply from: 'maven-publish.gradle'

android {
    compileSdkVersion 29

    defaultConfig {
        minSdkVersion 21
        setProperty("archivesBaseName", "AppConfig_" + version)
    }

    lintOptions {
        // see also kotlinOptions.allWarningsAsErrors below
        warningsAsErrors true
        abortOnError true
        ignore "ContentDescription", "Overdraw"
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
}

dependencies {
    implementation "androidx.preference:preference-ktx:1.1.1"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}


tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions.allWarningsAsErrors = true
}

detekt {
    // fail build on any finding
    failFast = true
    // preconfigure defaults
    buildUponDefaultConfig = true
    config = files("$projectDir/../config/detekt.yml")

    reports {
        // observe findings in your browser with structure and code snippets
        html.enabled = true
        // checkstyle like format mainly for integrations like Jenkins
        xml.enabled = false
        // similar to the console output, contains issue signature to manually edit baseline files
        txt.enabled = false
    }
}
