apply plugin: 'maven-publish'
apply plugin: 'signing'

tasks.publish.dependsOn(tasks.build)

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "sources"
}

// do not fail any task if they are not defined
def getNexusUsername() { if (hasProperty("NEXUS_USERNAME")) NEXUS_USERNAME else "" }
def getNexusPassword() { if (hasProperty("NEXUS_PASSWORD")) NEXUS_PASSWORD else "" }

publishing {
    publications {
        Production(MavenPublication) {
            groupId 'ch.pete.appconfig'
            artifactId 'appconfig'
            version this.version
            artifact("$buildDir/outputs/aar/AppConfig_$version-release.aar")
            artifact(sourceJar)

            pom {
                name = "AppConfig"
                description = "Reconfigure your app for test purpose."
                url = "https://github.com/PRosenb/AppConfig"
                licenses {
                    license {
                        name = "The Apache License, Version 2.0"
                        url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                    }
                }
                developers {
                    developer {
                        id = "PRosenb"
                        name = "Peter Rosenberg"
                    }
                }
                scm {
                    url = "https://github.com/PRosenb/AppConfig"
                }
            }
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                // Iterate over the implementation dependencies (we don't want the test ones),
                // adding a <dependency> node for each
                configurations.implementation.allDependencies.each {
                    // Ensure dependencies such as fileTree are not included in the pom.
                    if (it.name != 'unspecified') {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
    repositories {
        maven {
            credentials {
                username getNexusUsername()
                password getNexusPassword()
            }
            if (project.version.endsWith("-SNAPSHOT")) {
                url "https://oss.sonatype.org/content/repositories/snapshots/"
            } else {
                url "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            }
        }
    }
}

signing {
    sign publishing.publications.Production
}

nexusStaging {
    username = getNexusUsername()
    password =  getNexusPassword()
    packageGroup = "ch.pete.appconfig"
}
